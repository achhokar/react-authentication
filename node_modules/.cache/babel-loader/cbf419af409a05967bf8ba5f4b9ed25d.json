{"ast":null,"code":"var _jsxFileName = \"/Users/arsh/Documents/udemy/react/react-auth/src/components/Profile/ProfileForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport classes from \"./ProfileForm.module.css\";\nimport AuthContext from \"../../store/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileForm = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n  const newPasswordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredPassword = newPasswordInputRef.current.value;\n    setIsLoading(true);\n    fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyARstToI9Wn7NYV7dlSJvIPp6-rcv3OIX0\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        idToken: authCtx.token,\n        password: enteredPassword,\n        returnSecureToken: false\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      setIsLoading(false);\n\n      if (response.ok) {\n        return response.json();\n      } else {\n        return response.json().then(data => {\n          let errorMessage = \"Authentication Failed!\";\n\n          if (data && data.error && data.error.message) {\n            errorMessage = data.error.message;\n          }\n\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      console.log(data);\n    }).catch(error => {\n      alert(error.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"new-password\",\n        children: \"New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"new-password\",\n        ref: newPasswordInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.action,\n      children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 24\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Sending request...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileForm, \"E77o57DM1ZN8hAjTr7rPeRStJmc=\", false, function () {\n  return [useHistory];\n});\n\n_c = ProfileForm;\nexport default ProfileForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileForm\");","map":{"version":3,"names":["useRef","useContext","useState","useHistory","classes","AuthContext","ProfileForm","isLoading","setIsLoading","history","newPasswordInputRef","authCtx","submitHandler","event","preventDefault","enteredPassword","current","value","fetch","method","body","JSON","stringify","idToken","token","password","returnSecureToken","headers","then","response","ok","json","data","errorMessage","error","message","Error","console","log","catch","alert","form","control","action"],"sources":["/Users/arsh/Documents/udemy/react/react-auth/src/components/Profile/ProfileForm.js"],"sourcesContent":["import { useRef, useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport classes from \"./ProfileForm.module.css\";\nimport AuthContext from \"../../store/auth-context\";\n\nconst ProfileForm = () => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const history = useHistory();\n\n  const newPasswordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredPassword = newPasswordInputRef.current.value;\n\n    setIsLoading(true);\n    fetch(\n      \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyARstToI9Wn7NYV7dlSJvIPp6-rcv3OIX0\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          idToken: authCtx.token,\n          password: enteredPassword,\n          returnSecureToken: false,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => {\n        setIsLoading(false);\n        if (response.ok) {\n          return response.json();\n        } else {\n          return response.json().then((data) => {\n            let errorMessage = \"Authentication Failed!\";\n\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        console.log(data);\n      })\n      .catch((error) => {\n        alert(error.message);\n      });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor=\"new-password\">New Password</label>\n        <input type=\"password\" id=\"new-password\" ref={newPasswordInputRef} />\n      </div>\n      <div className={classes.action}>\n        {!isLoading && <button>Change Password</button>}\n        {isLoading && <p>Sending request...</p>}\n      </div>\n    </form>\n  );\n};\n\nexport default ProfileForm;\n"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;EAEA,MAAMO,OAAO,GAAGN,UAAU,EAA1B;EAEA,MAAMO,mBAAmB,GAAGV,MAAM,EAAlC;EAEA,MAAMW,OAAO,GAAGV,UAAU,CAACI,WAAD,CAA1B;;EAEA,MAAMO,aAAa,GAAIC,KAAD,IAAW;IAC/BA,KAAK,CAACC,cAAN;IAEA,MAAMC,eAAe,GAAGL,mBAAmB,CAACM,OAApB,CAA4BC,KAApD;IAEAT,YAAY,CAAC,IAAD,CAAZ;IACAU,KAAK,CACH,uGADG,EAEH;MACEC,MAAM,EAAE,MADV;MAEEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBC,OAAO,EAAEZ,OAAO,CAACa,KADE;QAEnBC,QAAQ,EAAEV,eAFS;QAGnBW,iBAAiB,EAAE;MAHA,CAAf,CAFR;MAOEC,OAAO,EAAE;QACP,gBAAgB;MADT;IAPX,CAFG,CAAL,CAcGC,IAdH,CAcSC,QAAD,IAAc;MAClBrB,YAAY,CAAC,KAAD,CAAZ;;MACA,IAAIqB,QAAQ,CAACC,EAAb,EAAiB;QACf,OAAOD,QAAQ,CAACE,IAAT,EAAP;MACD,CAFD,MAEO;QACL,OAAOF,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAsBI,IAAD,IAAU;UACpC,IAAIC,YAAY,GAAG,wBAAnB;;UAEA,IAAID,IAAI,IAAIA,IAAI,CAACE,KAAb,IAAsBF,IAAI,CAACE,KAAL,CAAWC,OAArC,EAA8C;YAC5CF,YAAY,GAAGD,IAAI,CAACE,KAAL,CAAWC,OAA1B;UACD;;UAED,MAAM,IAAIC,KAAJ,CAAUH,YAAV,CAAN;QACD,CARM,CAAP;MASD;IACF,CA7BH,EA8BGL,IA9BH,CA8BSI,IAAD,IAAU;MACdK,OAAO,CAACC,GAAR,CAAYN,IAAZ;IACD,CAhCH,EAiCGO,KAjCH,CAiCUL,KAAD,IAAW;MAChBM,KAAK,CAACN,KAAK,CAACC,OAAP,CAAL;IACD,CAnCH;EAoCD,CA1CD;;EA4CA,oBACE;IAAM,SAAS,EAAE/B,OAAO,CAACqC,IAAzB;IAA+B,QAAQ,EAAE7B,aAAzC;IAAA,wBACE;MAAK,SAAS,EAAER,OAAO,CAACsC,OAAxB;MAAA,wBACE;QAAO,OAAO,EAAC,cAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,IAAI,EAAC,UAAZ;QAAuB,EAAE,EAAC,cAA1B;QAAyC,GAAG,EAAEhC;MAA9C;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAKE;MAAK,SAAS,EAAEN,OAAO,CAACuC,MAAxB;MAAA,WACG,CAACpC,SAAD,iBAAc;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADjB,EAEGA,SAAS,iBAAI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFhB;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAjED;;GAAMD,W;UAGYH,U;;;KAHZG,W;AAmEN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}