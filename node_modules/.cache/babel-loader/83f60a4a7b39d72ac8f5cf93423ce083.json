{"ast":null,"code":"var _jsxFileName = \"/Users/arsh/Documents/udemy/react/react-auth/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const initialToken = localStorage.getItem(\"token\");\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n\n  const login = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n  };\n\n  const logout = () => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: login,\n    logout: logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"s3jk56xWU5XKZXYqw5SfcwTuysU=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","AuthContext","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","AuthContextProvider","props","initialToken","localStorage","getItem","setToken","userIsLoggedIn","setItem","removeItem","contextValue","children"],"sources":["/Users/arsh/Documents/udemy/react/react-auth/src/store/auth-context.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst AuthContext = React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: (token) => {},\n  logout: () => {},\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n};\n\nexport const AuthContextProvider = (props) => {\n  const initialToken = localStorage.getItem(\"token\");\n  const [token, setToken] = useState(initialToken);\n\n  const userIsLoggedIn = !!token;\n\n  const login = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n  };\n\n  const logout = () => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: login,\n    logout: logout,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;EACtCC,KAAK,EAAE,EAD+B;EAEtCC,UAAU,EAAE,KAF0B;EAGtCC,KAAK,EAAGF,KAAD,IAAW,CAAE,CAHkB;EAItCG,MAAM,EAAE,MAAM,CAAE;AAJsB,CAApB,CAApB;;AAOA,MAAMC,sBAAsB,GAAIC,cAAD,IAAoB;EACjD,MAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;EACA,MAAMC,iBAAiB,GAAG,IAAIF,IAAJ,CAASF,cAAT,EAAyBG,OAAzB,EAA1B;AACD,CAHD;;AAKA,OAAO,MAAME,mBAAmB,GAAIC,KAAD,IAAW;EAAA;;EAC5C,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;EACA,MAAM,CAACd,KAAD,EAAQe,QAAR,IAAoBlB,QAAQ,CAACe,YAAD,CAAlC;EAEA,MAAMI,cAAc,GAAG,CAAC,CAAChB,KAAzB;;EAEA,MAAME,KAAK,GAAG,CAACF,KAAD,EAAQK,cAAR,KAA2B;IACvCU,QAAQ,CAACf,KAAD,CAAR;IACAa,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BjB,KAA9B;EACD,CAHD;;EAKA,MAAMG,MAAM,GAAG,MAAM;IACnBY,QAAQ,CAAC,IAAD,CAAR;IACAF,YAAY,CAACK,UAAb,CAAwB,OAAxB;EACD,CAHD;;EAKA,MAAMC,YAAY,GAAG;IACnBnB,KAAK,EAAEA,KADY;IAEnBC,UAAU,EAAEe,cAFO;IAGnBd,KAAK,EAAEA,KAHY;IAInBC,MAAM,EAAEA;EAJW,CAArB;EAOA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEgB,YAA7B;IAAA,UACGR,KAAK,CAACS;EADT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA5BM;;GAAMV,mB;;KAAAA,mB;AA8Bb,eAAeZ,WAAf"},"metadata":{},"sourceType":"module"}